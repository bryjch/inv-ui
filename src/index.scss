/*
 * CSS variables don't support simple manipulation of ALPHA value so we use this
 * workaround where we set both the "full rgb()" and also provide a "number only rgb"
 * value at root level so at least it can be changed at that level
 *
 * Reference: https://medium.com/techhive-io/how-to-use-css-variables-with-sass-mixins-671e1f6067b3
 */

@function hexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}

$colors: 'main-background-color' #282c34, 'main-accent-color' #b4c7ec, 'main-panel-color' #202225;

:root {
  @each $name, $hex in $colors {
    --#{$name}: rgb(#{hexToRGB($hex)});
    --#{$name}-rgb: #{hexToRGB($hex)};
  }
}

html {
  background-color: var(--main-background-color);
}

body {
  margin: 0;
  font-family: 'Source Sans Pro', 'Helvetica', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, monospace;
}

#portal {
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10000;
  overflow: hidden;
  pointer-events: none;
}

/* Use class instead of id because id override precedence is too high */
.cake > * {
  pointer-events: auto;
}

.hover-icon {
  svg {
    cursor: pointer;
    border-radius: 50%;
    padding: 0.2rem;
    opacity: 0.6;
    transition: 0.3s ease all;

    &:hover {
      padding: 0;
      opacity: 1;
    }
  }
}

.flex-spacer {
  flex: 1;
}

.no-select {
  pointer-events: none;
  user-select: none;
}
